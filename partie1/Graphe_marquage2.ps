%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: julien,,,
%%Title: Window .romeo.global.frame.c
%%CreationDate: Thu Nov  5 15:17:44 2015
%%BoundingBox: 22 273 590 519
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Mincho
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Mincho
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.4285 0.4285 scale
-661 -286 translate
0 573 moveto 1323 573 lineto 1323 0 lineto 0 0 lineto closepath clip newpath
gsave
552.49970275141 302.931037045246 moveto
701.642740268568 301.545135748036 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
706.5 301.5 moveto
696.531963155891 305.093778439816 lineto
698.218371087385 302.076978047199 lineto
698.209079058146 301.077021219034 lineto
696.466900367164 298.092080729009 lineto
706.5 301.5 lineto
fill
grestore
gsave
913.99969755968 300.069562587476 moveto
1061.64274423476 301.4544394322 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
1066.5 301.5 moveto
1056.46660234611 304.9070417548 lineto
1058.20904209578 301.922253648574 lineto
1058.21842158203 300.922297636923 lineto
1056.53227750884 297.905349761217 lineto
1066.5 301.5 lineto
fill
grestore
gsave
1255.45950272448 295.8277535971 moveto
840.092072740506 152.583627885659 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
835.5 151 moveto
846.095970055978 150.950800682717 lineto
843.496886952762 153.228919060432 lineto
843.170867838057 154.174282237654 lineto
843.813184214809 157.570233649623 lineto
835.5 151 lineto
fill
grestore
gsave
551 60 moveto
701.642530562696 60 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
706.5 60 moveto
696.499 63.501 lineto
698.213367323622 60.5 lineto
698.213367323622 59.5 lineto
696.499 56.499 lineto
706.5 60 lineto
fill
grestore
gsave
909.49971754902 61.4327754827814 moveto
1063.14272901204 60.0439076743407 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
1068 60 moveto
1058.03105485115 63.5912580830588 lineto
1059.71822547338 60.574884165296 lineto
1059.70918626585 59.5749250197671 lineto
1057.96776231998 56.5895441460647 lineto
1068 60 lineto
fill
grestore
gsave
1252.49971838371 62.7831233670501 moveto
1026.07937855549 142.880030438597 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
1021.5 144.5 moveto
1029.76085516685 137.864092080782 lineto
1029.14547130436 141.265027102521 lineto
1029.47897202574 142.207776946776 lineto
1032.09602721793 144.465226490251 lineto
1021.5 144.5 lineto
fill
grestore
gsave
893.14296504921 300.105640155531 moveto
730.5 301.5 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
898.00025598771 300.063997952098 moveto
888.029636934551 303.65060605681 lineto
889.718214231774 300.635019375647 lineto
889.709641413361 299.63505612293 lineto
887.969610060023 296.648863361285 lineto
898.00025598771 300.063997952098 lineto
fill
grestore
gsave
1250.14432699864 298.714796115202 moveto
1090.5 301.5 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
1255.00105736189 298.630064107937 moveto
1245.06264926103 302.304985388821 lineto
1246.72440733996 299.274537169923 lineto
1246.70696368779 298.274689321999 lineto
1244.94050880857 295.304050757654 lineto
1255.00105736189 298.630064107937 lineto
fill
grestore
gsave
555.306967800619 63.7212217064363 moveto
823.5 147 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
550.66800048345 62.28073860533 moveto
561.257350378472 61.9030207201372 lineto
558.73015305304 64.2606317988837 lineto
558.433602941979 65.2156490927742 lineto
559.180906500825 68.5900518119584 lineto
550.66800048345 62.28073860533 lineto
fill
grestore
gsave
888.642987371255 61.3916835794674 moveto
730.5 60 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
893.50026873143 61.4344284322249 moveto
883.468847794758 64.8472858847562 lineto
885.209556996902 61.8614882034196 lineto
885.218356816089 60.861526922578 lineto
883.530464128709 57.8455569963037 lineto
893.50026873143 61.4344284322249 lineto
fill
grestore
gsave
1247.1425305627 60 moveto
1092 60 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
1252 60 moveto
1241.999 63.501 lineto
1243.71336732362 60.5 lineto
1243.71336732362 59.5 lineto
1241.999 56.499 lineto
1252 60 lineto
fill
grestore
gsave
556.743277231996 299.073887427165 moveto
1021.5 152.5 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
552.11073108804 300.53488898721 moveto
560.595628019655 294.187958543297 lineto
559.863267250618 297.565635855338 lineto
560.164041466268 298.519331231861 lineto
562.70164907763 300.865733569708 lineto
552.11073108804 300.53488898721 lineto
fill
grestore
gsave
matrix currentmatrix
544.5 303 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.106 0.780 0.796 setrgbcolor AdjustColor
fill
matrix currentmatrix
544.5 303 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
520 303.5 [
[(R1V2)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
matrix currentmatrix
906 300 translate 8 7.99999999999997 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.106 0.780 0.796 setrgbcolor AdjustColor
fill
matrix currentmatrix
906 300 translate 8 7.99999999999997 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
916 290 [
[(R1O2)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
matrix currentmatrix
1263 298.5 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.106 0.780 0.796 setrgbcolor AdjustColor
fill
matrix currentmatrix
1263 298.5 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
1273 288.5 [
[(R1R2P8)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
matrix currentmatrix
543 60 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.106 0.780 0.796 setrgbcolor AdjustColor
fill
matrix currentmatrix
543 60 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
553 50 [
[(V1R2)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
matrix currentmatrix
901.5 61.5000000000001 translate 8 7.99999999999997 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.106 0.780 0.796 setrgbcolor AdjustColor
fill
matrix currentmatrix
901.5 61.5000000000001 translate 8 7.99999999999997 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
911.5 51.5 [
[(O1R2)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
matrix currentmatrix
1260 60 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.106 0.780 0.796 setrgbcolor AdjustColor
fill
matrix currentmatrix
1260 60 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
1270 50 [
[(R1R2P7)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
706.5 305.5 moveto 24 0 rlineto 0 -8 rlineto -24 0 rlineto closepath
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
706.5 305.5 moveto 24 0 rlineto 0 -8 rlineto -24 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.545 0.396 0.031 setrgbcolor AdjustColor
728.5 291.5 [
[(VO2)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
1066.5 305.5 moveto 24.0000000000002 0 rlineto 0 -8 rlineto -24.0000000000002 0 rlineto closepath
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
1066.5 305.5 moveto 24.0000000000002 0 rlineto 0 -8 rlineto -24.0000000000002 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.545 0.396 0.031 setrgbcolor AdjustColor
1088.5 291.5 [
[(OR2)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
823.5 151 moveto 24.0000000000001 0 rlineto 0 -8 rlineto -24.0000000000001 0 rlineto closepath
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
823.5 151 moveto 24.0000000000001 0 rlineto 0 -8 rlineto -24.0000000000001 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.545 0.396 0.031 setrgbcolor AdjustColor
805 156.5 [
[(RV1)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
706.5 64 moveto 24 0 rlineto 0 -7.99999999999989 rlineto -24 0 rlineto closepath
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
706.5 64 moveto 24 0 rlineto 0 -7.99999999999989 rlineto -24 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.545 0.396 0.031 setrgbcolor AdjustColor
728.5 50 [
[(VO1)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
1068 64 moveto 24 0 rlineto 0 -7.99999999999989 rlineto -24 0 rlineto closepath
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
1068 64 moveto 24 0 rlineto 0 -7.99999999999989 rlineto -24 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.545 0.396 0.031 setrgbcolor AdjustColor
1090 50 [
[(OR1)]
] 11 -0.5 0 0 false DrawText
grestore
gsave
1009.5 152.5 moveto 24.0000000000001 0 rlineto 0 -8 rlineto -24.0000000000001 0 rlineto closepath
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
1009.5 152.5 moveto 24.0000000000001 0 rlineto 0 -8 rlineto -24.0000000000001 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Mincho findfont 9 scalefont ISOEncode setfont
0.545 0.396 0.031 setrgbcolor AdjustColor
1052.5 153.5 [
[(RV2)]
] 11 -0.5 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
